@page "/deposit"
@using DepositUI.Data
@using DepositUI.Components
@inject IHttpClientFactory ClientFactory;

<h1>Deposit Calculations</h1>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a @onclick="Main" class="nav-link@(mode == "Main" ? " active" : "")">Calculations</a>
    </li>
    <li class="nav-item">
        <a @onclick="History" class="nav-link@(mode != "Main" ? " active" : "")">History</a>
    </li>
</ul>
@if (mode == "Main")
{
    <div class="row tab">
        <div class="col-4">
            <input type="text" @bind-value="PercentStr" @bind-value:event="oninput" placeholder="Percents" /> <br />
            <input type="text" @bind-value="TermStr" @bind-value:event="oninput" placeholder="Terms" /> <br />
            <input type="text" @bind-value="AmountStr" @bind-value:event="oninput" placeholder="Summ" /> <br />

            <button class="submit-btn" @onclick="GetDepositCalc"> Calculate </button>

            @if (getDepositError && requestErrors != null && requestErrors.Count > 0)
            {
                <div>
                    @foreach (RequestError error in requestErrors)
                    {
                        <span class="request-error">@error.PropertyName : @error.ErrorMessage </span><br />
                    }
                </div>
            }
        </div>
        <div class="col-8">
            <DepositDetailsTable DepositDetails="depositDetails"> </DepositDetailsTable>
        </div>
    </div>
}
else if (mode == "History")
{
<div class="skrollable history">
    <div class="row">
        @for (int i = 0; i < 4; i++)
        {
            <div class="col-3">
                @if (deposits != null)
                {
                    @for (int j = 0; j < deposits.Count; j++)
                    {
                        if (j * 4 + i < deposits.Count)
                        {
                            var depositNumber = j * 4 + i;
                            <div class="deposit-block">
                                <div class="deposit-details">
                                    <div class="align-left">
                                        <span>Percent:</span><br />
                                        <span>Term:</span><br />
                                        <span>Sum:</span><br />
                                        <span>Date:</span>
                                    </div>
                                    <div class=" align-right">
                                        <span>@(deposits[depositNumber].Percent)%</span><br />
                                        <span>@(deposits[depositNumber].Term)</span><br />
                                        <span>@(deposits[depositNumber].Amount)$</span><br />
                                        <span>@(deposits[depositNumber].Date.ToString("dd.MM.yyyy"))</span>
                                    </div>
                                </div>
                                <div class="deposit-btn-cont">
                                    <button @onclick="() => Details(deposits[depositNumber].Id)" class="details-btn">See details</button>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        }
    </div>
    <button class="details-btn" @onclick="LoadMore">Load More</button>
</div>
}
else if (mode == "Details")
{
    <div class="tab">
        <DepositDetailsTable DepositDetails="depositDetails"> </DepositDetailsTable>
        <form action="https://localhost:44320/api/depositcalc/csv">
            <input type="hidden" name="depositId" value="@depositId" />
            <button type="submit" class="submit-btn">Export to CSV</button>
        </form>
    </div>
}
